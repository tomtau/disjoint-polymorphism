def extend S [U*S] (first : S) (second : U) : S&U = first ,, second;

type Person = {name : String, male : Bool};
type Loggable = {log : T -> Int};
type Dog = {name : String, male : String};

def person (n : String) (s : Bool) : Person = {name = n, male = s};

def consoleLogger : Loggable = {log = (\ x . 3) : T -> Int};

def dog (n : String) (s : String) : Dog = {name = n, male = s};

def jim : Person & Loggable = extend Person Loggable (person "Jim" true) consoleLogger;

jim.log ()

-- def fool : Dog & Person = extend Dog Person (dog "Pluto" "yes") (person "Jim" true);
