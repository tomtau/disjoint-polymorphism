%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 524.000000 222.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.12.4 (Build 16E195) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 315 134
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 315 134
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Helvetica
%!FontType1-1.0: Helvetica 1.0000.0.0000
14 dict begin/FontName /Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /A put
dup 34 /r put
dup 35 /i put
dup 36 /t put
dup 37 /h put
dup 38 /B put
dup 39 /o put
dup 40 /l put
dup 41 /V put
dup 42 /a put
dup 43 /F put
dup 44 /u put
dup 45 /n put
dup 46 /c put
dup 47 /M put
dup 48 /hyphen put
dup 49 /J put
dup 50 /S put
dup 51 /L put
dup 52 /g put
dup 53 /e put
dup 54 /I put
dup 55 /b put
dup 56 /y put
dup 57 /p put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<



B080441BB04044591B21212045B0C05058B0C0441B2159592DB8004F2C2020456944B001602020457D691844B001602DB800502CB8004F2A2DB800512C4B20B003265358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800522C4B535845441B2121592DB800532C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800542C2020456944B001602DB800552CB800542A212DB800562C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800572C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800582C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800592C2020456944B001602020457D691844B001602DB8005A2CB800592A2DB8005B2C4B20B003265358B0401BB000598A8A20B0032653582321B0808A8A1B8A235920B0032653582321B800C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB8005C2C4B535845441B2121592D00000000020042000004D005BD000300070043B800532BB800082FB800042FB8000810B80000D0B800002FB8000410B80003DCB8000010B80007DCB8000310B80009DC00BA0007000000562BBA0002000500562B3031331121112711211142048EB8FCE205BDFA43B8044DFBB300000001005501DE024B029700030020400A002F03011A0500190405B80142B321BA48182B2B4EE410E6002F4DED3130132115215501F6FE0A0297B900000003001E0000053D05BD0002000A000B00DA40504801580168010388039704980AA90AB809B80A06280A010007060601020809090102080A000705018C01030420140A0A251209090114050525120606010B0B0503090A040605010B02010300021E0708B80159400904030206090A030508B801A840120D0D17171A059E019E0A190C0DA1218C5E182B2B194EF4184DFDFD194E456544E6464418003F173C3F3C4DFD3CFD3C11393F011112393912393911392F872E2B7D104B5158B004C01BB004C459872E182B7D104B5158B003C01BB003C4592B1112393912393987103C3C07103C3C3130015D5D005D010B01133301230321032301038EDFED85E10215DA95FDBB9FCC0290025A0289FD770363FA4301B8FE4805BD000300970000050405BD000A00150028008240385A0D5A11






5A58B020615944B801A6204569447500
00>] def
/CharStrings 27 dict dup begin
/.notdef 0 def
/hyphen 1 def
/A 2 def
/B 3 def
/F 4 def
/I 5 def
/J 6 def
/L 7 def
/M 8 def
/S 9 def
/V 10 def
/a 11 def
/b 12 def
/c 13 def
/e 14 def
/g 15 def
/h 16 def
/i 17 def
/l 18 def
/n 19 def
/o 20 def
/p 21 def
/r 22 def
/t 23 def
/u 24 def
/y 25 def
/u20B8 26 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1947 -985 2961 2297}def
/UniqueID 4003230 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C926597C1DAC1BA3798797E796C89ECAEC4435602C69EF8DE4A69515109638DF86B62BEC4457DD235B018F13E50EF61B04CEB8E3062CDF2AFC8BADD47299D478A46B2E1E6448B7A26CF42AB37E06DC278FC1822864D5079D7823450BD7D6F81FDAF346E3D9ACB0572AB0E243BCCC0BA7908229CA0B5D0FD1F09A7B0B9AD11834B2E34FB640DAB4741B0146A0FF75B0675E3A3BB74FF3A1335C6617A02D2B9D332C5C470B488D06C899C0473B9F53037085C24B25CA5B30C267C1CAABAD0F9C34CFAEEE2C4DB246ACF6FE4E8DF98A1ADFA1D518083B59B1FA85DB6D86E0126F49988F54CD1C49ADB37A7A9B8A15F56D518048374857B3E477E9FDA1964281696EC2B282E94B9B8020A84E2E758B0423C3EC1166361E82AF254406AF40D1A670B77E3EFB453921632A2D92A9EF59A26EE3E04308F71448B609FF815D46B403E594CDBC5F56F58ECFCB253C22E9B8E6971E67146B2E1A96BDD239820E6013B56CC7B61A8EFC5B46747A24EE83D1D5A9089EF53E0B838E08D320448B26B0162913627F3AC9FF9A8D241060D3490499717BF959E4FEB3A143B200ED83D8DDB0F703ABCD989047EC340E5BF268A06157557752A9FF7F65950BACD15978213BC48D3E669B52AF0879320ACDF0AA00C49A4B4478655B01975498C3ADF2BE758FADF0F5293EE6752781D11EA945E4F1B24ABE52302597B973AA0E278FA2FD2E39CCB7C3F058E4BE70B72AB0DAF23E16EA8E12A99BA47D4649887C1D2CFE14B42F42B758C6013



0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Helvetica cguidfix
/F1.1/Helvetica renmfont
%RBIBeginFontSubset: Helvetica-Bold
%!FontType1-1.0: Helvetica-Bold 1.0000.1.0000
14 dict begin/FontName /Helvetica-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /L put
dup 34 /E put
dup 35 /G put
dup 36 /N put
dup 37 /D put
dup 38 /colon put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -2084 1 index div -985 2 index div 2942 3 index div 2374 5 -1 roll div]cvx def
/sfnts [<



2046206A6164B0042546206A61645258238A592FFD2DB8004D2C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB8004E2C2020456944B001602020457D691844B001602DB8004F2CB8004E2A2DB800502C4B20B003265358B0801BB040598A8A20B0032653582321B0C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800512C4B535845441B2121592DB800522C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB800532C2020456944B001602DB800542CB800532A212DB800552C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800562C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800572C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800582C2020456944B001602020457D691844B001602DB800592CB800582A2DB8005A2C4B20B003265358B0401BB000598A8A20B0032653582321B0808A8A1B8A235920B0032653582321B800C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB8005B2C4B535845441B2121592DB8005C2C4BB800095058B101018E59B801FF85B800441DB9000900035F5E2DB8005D2C2020456944B001602DB8005E2CB8005D2A212DB8005F2C2046B003254652582359208A208A49648A204620686164B004254620686164525823658A592F20B00053586920B000545821B040591B6920B000545821B0406559593A2DB800602C2046B00425465258238A592046206A6164B0042546206A61645258238A592FFD2DB800612C4B20B0032650585158B080441BB04044591B21212045B0C05058B0C0441B2159592DB800622C2020456944B001602020457D691844B001602DB800632CB800622A2DB800642C4B20B003265358B0401BB000598A8A20B0032653582321B0808A8A1B8A235920B0032653582321B800C08A8A1B8A235920B0032653582321B801008A8A1B8A235920B0032653582321B801408A8A1B8A235920B80003265358B0032545B8018050582321B8018023211BB003254523212321591B2159442DB800652C4B535845441B2121592D000002009A0000053D05C200030007003E402105061D02010004071D03000A05041D0303021A0906071D0100190809AA216C3C182B2B4EF43C4DFD3C4E10F63C4D10FD3C00


03266165B04E236544B0502344B1004E455458B14E406544B250405045236144592B2B4569534200
00>] def
/CharStrings 8 dict dup begin
/.notdef 0 def
/colon 1 def
/D 2 def
/E 3 def
/G 4 def
/L 5 def
/N 6 def
/u20B8 7 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-2084 -985 2942 2374}def
/UniqueID 4330650 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C980943B128E467A4B303542E85E0849534105E9F083E4E3373F14A64BDC8AF9626D94F8F048873E176E97F5BF9B7ADD0FBC1C2B06C9BA46D46BF16504F6F9677A20E2C0D5395B916795AC2AA8E3E9D95F3CC59208EDDA663C5DEDED11C8DC802E99399A7F4B970A5FCCBEF07814BCF6316014AC2496CDBDD6AEA96EAC0F688DBF5B63B683AE91BFD37334D109474583F6CD4C255F10F0A7E17D77114ABF231C8F0BF1FAA7E6820D16E6D5052A534E193D2DA010D2FA30D8A3C25CC34384D023716A53B8A4DCA8136744447867692B6C610B8995010936484B0D67D897EC3B87122DADD11B4BA2D216FA876AF8BB5BC21DE79CF42FA997430A08337A373904263B44C4D92F7E093E99E9BF2515920580A3FD1F7C7C759B9481BB370518BAD8EA2A3601DEFDB0AA291EE3123CEB040FFFAFF2E25D6248D267AD6E373254C49E359CBB3FCCE0D24E7348919C64C1136320B56C83401EE621F7575C15AF280298CF02E549FCC03CB8B71A4E75227CD319F95F86BFA95B8AA29CCFE2E95E6A3F2389A0644E839998BEEBB52B841247879B69CC1CCFB98EDBC7BC255086A471A6BD7BBEE73E3F34DA41E48C59849A9CA789CC54291F0B52804CDD56EAC5202A5543CCB5BBBFEEE6B8AD553D1B3A469FD33E88A0B794B21259BED48150361F5F0DD9445819F22DF52831B4159CEE33EAF75317DE76AB27F0A82C46880990A52A77FA4DF6CC399BFF9186D6E3E8DB5757F95D87991969A3BE0F341D15665964FAF6C9693ED
0C752560B8591C7AB83E6380C0FBB5064F864A30B8322A2986D8C5C1090595844AA40D211713B222CD712EB57BC041A08A4289E070408088620DA85A8E79AD54D8233803698C6FE601E05A27E0F6276BFA5433A80AA883A8252ADAD955598326EC8FE035BDEF77AC66D0B692F0AD1C21D893CDE0737BC6E1A24E8053562D586CB3113036B69585DCBB62E64F775A940B41051AF6486CD8B1250A8A4DF5856643A996A001C8FB0FD63815EF43FB16DF52CE284E9BDAD27D8485D03ACD690565D08F7B4C88E84934D987F661E2DF29B860F9E096A1011660A35FF619EAA30C4F00039CBDC4D7706E83E6CC986BDEB5323533A004B47DDD88D77F4A70E26DD7D40CD62D5E53A9DDFB564A1E61CD19E983960EFB9FCECBAA848ACBF0584642C44D4C125C6FF038A3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Helvetica-Bold cguidfix
/F2.1/Helvetica-Bold renmfont
%RBIBeginFontSubset: HelveticaNeue
%!FontType1-1.0: HelveticaNeue 1.0000.1.0000
14 dict begin/FontName /HelveticaNeue def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /numbersign put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1000 -951 1 index div -481 2 index div 1987 3 index div 1077 5 -1 roll div]cvx def
/sfnts [<


00>] def
/CharStrings 3 dict dup begin
/.notdef 0 def
/numbersign 1 def
/uni2B91 2 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.001 0 0 0.001 0 0 ] def
/FontBBox{-951 -481 1987 1077}def
/UniqueID 4243299 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C9301CB16965794C1772CA14F06910BCAE9D9B0B498A8D671A1AA6B0B8D5582332A92D84857DD5C3D74FC2BB42498CF56F31A20997F10CA724E3D0BA7FB6AD95276AB471CF50578C8FAFB72BFEECDFD5EF756626B1A35803622C4F75FBA92C32BCAFE676A1BC095AE5B5745D6D2D36E68A9ACE68ED0D25A994757043C4699FBC3378D57F8C8FB03FFB9AB456A3B9562ECC8413CAEC9E96D500F4D07C05A5F84661DEA9B47084645C593AB8CA0C13731EECB96F99E688EFD8E40A3A2823EF2042A901A9FA06C9439C93AD51E95B104E2ABD1536595D561DCFF100162218A715266F5A5E6CD8B1447F4D413063808F0A910E1A7D962A60CEC68438F48CD79ECE3ADBBC376E8546403200192749017FDCDCE96D9CA07731B73026A74E98C3E0A525EA04C33B2BD34C8310E5D614B13C8A244AB012A3A2A9BC637712F77BC529B7FC001FB615A63F484BD1DA53160E8ADAF13346897CFD9547054F24FA161D7F10ADA883A561373DAC3BA2E836C21ED36608C7A29818CFE046BAA0DAB25B9125D6E7D584CE82BD282DA7FAEC8DFC6AA5B374882E8488F78ADC5BB5ACE730E466DE183
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/HelveticaNeue cguidfix
/F3.1/HelveticaNeue renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
0 0 314.40002 133.20001 rc
-4.2000003 141.60001 m
331.20001 141.60001 l
331.20001 -328.20001 l
-4.2000003 -328.20001 l
h
-4.2000003 141.60001 m
f
22.800001 22.800001 m
51.600002 22.800001 l
51.600002 6.6000004 l
22.800001 6.6000004 l
h
22.800001 22.800001 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
0.60000002 0 0 -0.60000002 -4.2000003 141.60001 cm
45 198 m
93 198 l
93 225 l
45 225 l
h
45 198 m
S
/Cs2 SC
0 sc
0 i
0.60000002 0 0 -0.60000002 37.200001 14.700001 cm
/F1.1[ 12 0 0 -12 0 0]sf
-12.336914 4 m
(!"#$%)[ 8.003906 3.996094 2.666016 3.333984 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
82.200005 22.800001 m
114.60001 22.800001 l
114.60001 6.6000004 l
82.200005 6.6000004 l
h
82.200005 22.800001 m
f
0.60000002 i
0 0 0 sc
0.60000002 0 0 -0.60000002 -4.2000003 141.60001 cm
144 198 m
198 198 l
198 225 l
144 225 l
h
144 198 m
S
/Cs2 SC
0 sc
0 i
0.60000002 0 0 -0.60000002 98.400002 14.700001 cm
-12.008789 4 m
(&''\()[ 8.003906 6.673828 6.673828 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
147 22.800001 m
179.40001 22.800001 l
179.40001 6.6000004 l
147 6.6000004 l
h
147 22.800001 m
f
0.60000002 i
0 0 0 sc
0.60000002 0 0 -0.60000002 -4.2000003 141.60001 cm
252 198 m
306 198 l
306 225 l
252 225 l
h
252 198 m
S
/Cs2 SC
0 sc
0 i
0.60000002 0 0 -0.60000002 163.20001 14.700001 cm
-8.8945312 4 m
(\)*")[ 7.119141 6.673828 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
206.40001 22.800001 m
244.20001 22.800001 l
244.20001 6.6000004 l
206.40001 6.6000004 l
h
206.40001 22.800001 m
f
0.60000002 i
0 0 0 sc
0.60000002 0 0 -0.60000002 -4.2000003 141.60001 cm
351 198 m
414 198 l
414 225 l
351 225 l
h
351 198 m
S
/Cs2 SC
0 sc
0 i
0.60000002 0 0 -0.60000002 225.3 14.700001 cm
-23.012695 4 m
(+,-.$#'-)[ 7.330078 6.673828 6.673828 6.000000 3.333984 2.666016 6.673828 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
34.255119 69.027565 m
40.581638 65.864319 40.581638 60.735687 34.255119 57.572445 c
27.928629 54.409184 17.671371 54.409184 11.344883 57.572445 c
5.0183616 60.735687 5.0183616 65.864319 11.344883 69.027565 c
17.671371 72.190819 27.928629 72.190819 34.255119 69.027565 c
f
0.60000002 i
0 0 0 sc
0.60000002 0 0 -0.60000002 -4.2000003 141.60001 cm
64.091866 120.95407 m
74.636063 126.22614 74.636063 134.77385 64.091866 140.04593 c
53.547714 145.31804 36.452286 145.31804 25.908138 140.04593 c
15.363936 134.77385 15.363936 126.22614 25.908138 120.95407 c
36.452286 115.68197 53.547714 115.68197 64.091866 120.95407 c
S
/Cs2 SC
0 sc
0 i
0.60000002 0 0 -0.60000002 22.800001 63.300003 cm
-12.336914 4 m
(!"#$%)[ 8.003906 3.996094 2.666016 3.333984 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
112.88268 69.027565 m
122.37246 65.864319 122.37246 60.735687 112.88268 57.572445 c
103.39294 54.409184 88.007057 54.409184 78.517326 57.572445 c
69.027542 60.735687 69.027542 65.864319 78.517326 69.027565 c
88.007057 72.190819 103.39294 72.190819 112.88268 69.027565 c
f
0.60000002 i
0 0 0 sc
0.60000002 0 0 -0.60000002 -4.2000003 141.60001 cm
195.13779 120.95407 m
210.9541 126.22614 210.9541 134.77385 195.13779 140.04593 c
179.32156 145.31804 153.67844 145.31804 137.86221 140.04593 c
122.04591 134.77385 122.04591 126.22614 137.86221 120.95407 c
153.67844 115.68197 179.32156 115.68197 195.13779 120.95407 c
S
/Cs2 SC
0 sc
0 i
0.60000002 0 0 -0.60000002 95.700005 63.300003 cm
-24.345703 4 m
(&''\(!"#$%)[ 8.003906 6.673828 6.673828 2.666016 8.003906 3.996094 2.666016 3.333984 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
200.0735 69.027565 m
208.50887 65.864319 208.50887 60.735687 200.0735 57.572445 c
191.63818 54.409184 177.96184 54.409184 169.52652 57.572445 c
161.09116 60.735687 161.09116 65.864319 169.52652 69.027565 c
177.96184 72.190819 191.63818 72.190819 200.0735 69.027565 c
f
0.60000002 i
0 0 0 sc
0.60000002 0 0 -0.60000002 -4.2000003 141.60001 cm
340.45581 120.95407 m
354.51474 126.22614 354.51474 134.77385 340.45581 140.04593 c
326.39694 145.31804 303.60306 145.31804 289.54419 140.04593 c
275.48526 134.77385 275.48526 126.22614 289.54419 120.95407 c
303.60306 115.68197 326.39694 115.68197 340.45581 120.95407 c
S
/Cs2 SC
0 sc
0 i
0.60000002 0 0 -0.60000002 184.8 63.300003 cm
-21.231445 4 m
(\)*"!"#$%)[ 7.119141 6.673828 3.996094 8.003906 3.996094 2.666016 3.333984 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
275.67349 69.027565 m
284.10886 65.864319 284.10886 60.735687 275.67349 57.572445 c
267.23819 54.409184 253.56184 54.409184 245.12653 57.572445 c
236.69116 60.735687 236.69116 65.864319 245.12653 69.027565 c
253.56184 72.190819 267.23819 72.190819 275.67349 69.027565 c
f
0.60000002 i
0 0 0 sc
0.60000002 0 0 -0.60000002 -4.2000003 141.60001 cm
466.45581 120.95407 m
480.51474 126.22614 480.51474 134.77385 466.45581 140.04593 c
452.39694 145.31804 429.60306 145.31804 415.54419 140.04593 c
401.48526 134.77385 401.48526 126.22614 415.54419 120.95407 c
429.60306 115.68197 452.39694 115.68197 466.45581 120.95407 c
S
/Cs2 SC
0 sc
0 i
0.60000002 0 0 -0.60000002 260.40002 63.300003 cm
-20.000977 4 m
(/#-#012)[ 9.996094 2.666016 6.673828 2.666016 3.996094 6.000000 0.000000 ] xS
0.60000002 i
/Cs1 SC
0 0 0 sc
0.60000002 0 0 -0.60000002 -4.2000003 141.60001 cm
49.893814 144.26385 m
65.683403 188.67207 l
S
0 i
CM
36.818092 23.874126 m
36.906029 28.999773 l
33.514057 27.793739 l
h
36.818092 23.874126 m
f
0 J
0 j
0.60000002 0 0 -0.60000002 -4.2000003 141.60001 cm
68.36348 196.20979 m
68.510048 187.66704 l
62.856762 189.67711 l
h
68.36348 196.20979 m
S
1 J
1 j
0.60000002 i
125.50033 130.44348 m
82.398804 130.38408 l
S
0 i
CM
40.439289 63.376175 m
45.236805 61.569561 l
45.241768 65.169556 l
h
40.439289 63.376175 m
f
0 J
0 j
0.60000002 0 0 -0.60000002 -4.2000003 141.60001 cm
74.398811 130.37305 m
82.394669 133.38406 l
82.402939 127.38407 l
h
74.398811 130.37305 m
S
1 J
1 j
0.60000002 i
167.43304 144.49559 m
170.34146 188.12193 l
S
0 i
CM
98.324173 23.937475 m
99.800896 28.846579 l
96.20887 28.607111 l
h
98.324173 23.937475 m
f
0 J
0 j
0.60000002 0 0 -0.60000002 -4.2000003 141.60001 cm
170.87361 196.1042 m
173.33482 187.92236 l
167.3481 188.32149 l
h
170.87361 196.1042 m
S
1 J
1 j
0.60000002 i
278.49997 130.49915 m
217.40002 130.49771 l
S
0 i
CM
121.44002 63.301491 m
126.23997 61.501377 l
126.24006 65.101379 l
h
121.44002 63.301491 m
f
0 J
0 j
0.60000002 0 0 -0.60000002 -4.2000003 141.60001 cm
209.40002 130.49753 m
217.39995 133.49771 l
217.40009 127.49771 l
h
209.40002 130.49753 m
S
1 J
1 j
0.60000002 i
307.7067 144.18068 m
283.90414 188.82909 l
S
0 i
CM
163.88441 24.066866 m
167.73088 27.455769 l
164.55412 29.149336 l
h
163.88441 24.066866 m
f
0 J
0 j
0.60000002 0 0 -0.60000002 -4.2000003 141.60001 cm
280.14069 195.88857 m
286.55145 190.24039 l
281.25687 187.41777 l
h
280.14069 195.88857 m
S
1 J
1 j
0.60000002 i
404.49997 130.50002 m
361.40002 130.50002 l
S
0 i
CM
207.84001 63.299995 m
212.64001 61.499996 l
212.64001 65.099998 l
h
207.84001 63.299995 m
f
0 J
0 j
0.60000002 0 0 -0.60000002 -4.2000003 141.60001 cm
353.40002 130.50002 m
361.40002 133.50002 l
361.40002 127.50001 l
h
353.40002 130.50002 m
S
1 J
1 j
0.60000002 i
432.84363 144.10159 m
405.86581 189.08992 l
S
0 i
CM
236.85094 24.029474 m
240.86322 27.220343 l
237.77579 29.071762 l
h
236.85094 24.029474 m
f
0 J
0 j
0.60000002 0 0 -0.60000002 -4.2000003 141.60001 cm
401.75156 195.95088 m
408.43869 190.63277 l
403.29297 187.54706 l
h
401.75156 195.95088 m
S
[
4
4
] 0 d
0.60000002 i
63.004086 119.99762 m
75.001526 112.99911 85.751488 99.116013 99 99 c
110.40097 98.900162 123.6581 108.99536 136.37404 116.12499 c
S
0 i
CM
80.289734 70.543686 m
76.856308 74.350471 l
77.62619 71.924095 l
77.62619 71.924095 l
75.199814 71.154221 l
h
80.289734 70.543686 m
f
[] 0 d
0.60000002 0 0 -0.60000002 -4.2000003 141.60001 cm
140.81621 118.4272 m
135.09384 112.08256 l
136.37697 116.12651 l
136.37697 116.12651 l
132.33302 117.40965 l
h
140.81621 118.4272 m
S
[
4
4
] 0 d
0.60000002 i
192.4469 119.81599 m
209.29625 112.87801 226.5574 98.961143 243 99 c
257.31662 99.033829 271.02014 109.64786 284.90973 117.02306 c
S
0 i
CM
169.44284 70.070374 m
165.91811 73.792786 l
166.7466 71.385788 l
166.7466 71.385788 l
164.33961 70.557304 l
h
169.44284 70.070374 m
f
[] 0 d
0.60000002 0 0 -0.60000002 -4.2000003 141.60001 cm
289.40472 119.21605 m
283.53018 113.01203 l
284.91098 117.02368 l
284.91098 117.02368 l
280.89935 118.4045 l
h
289.40472 119.21605 m
S
[
4
4
] 0 d
0.60000002 i
337.04993 119.47503 m
350.69858 112.6507 364.35135 99 378 99 c
389.64401 99 401.29102 108.93529 412.93588 116.09116 c
S
0 i
CM
246.17651 70.473991 m
242.87587 74.396454 l
243.56195 71.945068 l
243.56195 71.945068 l
241.11058 71.25898 l
h
246.17651 70.473991 m
f
[] 0 d
0.60000002 0 0 -0.60000002 -4.2000003 141.60001 cm
417.29419 118.54335 m
411.79309 112.00591 l
412.93658 116.09155 l
412.93658 116.09155 l
408.85095 117.23503 l
h
417.29419 118.54335 m
S
/Cs2 SC
0 sc
0.60000002 0 0 -0.60000002 88.774506 111.9 cm
/F1.1[ 10 0 0 -10 0 0]sf
-22.246094 4 m
(3*-4,*45)[ 5.561523 5.561523 5.561523 5.561523 5.561523 5.561523 5.561523 0.000000 ] xS
0.54248047 w
0.60000002 0 0 -0.60000002 25.149002 119.325 cm
-24.75 4.4446058 m
23.75 4.4446058 l
S
/F2.1[ 11 0 0 -11 0 0]sf
-24.75 3.5 m
(!"#"$%&)[ 6.719238 7.336914 8.556152 7.336914 7.943848 7.943848 0.000000 ] xS
0.60000002 0 0 -0.60000002 149.349 111.9 cm
/F1.1[ 10 0 0 -10 0 0]sf
-17.231445 4 m
(+5*$,"5)[ 6.108398 5.561523 5.561523 2.778320 5.561523 3.330078 0.000000 ] xS
0.60000002 0 0 -0.60000002 216.8625 111.9 cm
-24.73877 4 m
(6-%5"#$*-.5)[ 2.778320 5.561523 5.561523 5.561523 3.330078 2.221680 2.778320 5.561523 5.561523 5.000000 0.000000 ] xS
/Cs1 SC
1 1 1 sc
CM
114.60001 120.00001 m
136.20001 120.00001 l
136.20001 109.2 l
114.60001 109.2 l
h
114.60001 120.00001 m
f
1 w
1 J
1 j
0.60000002 i
0 0 0 sc
0.60000002 0 0 -0.60000002 -4.2000003 141.60001 cm
198 36 m
234 36 l
234 54 l
198 54 l
h
198 36 m
S
/Cs2 SC
0 sc
0 i
0.60000002 0 0 -0.60000002 125.4 114.60001 cm
/F3.1[ 10 0 0 -10 0 0]sf
-2.78 3.8600006 m
(!)s
/Cs1 SC
1 1 1 sc
CM
68.236748 118.41838 m
72.45443 116.30955 72.45443 112.89046 68.236748 110.78163 c
64.019089 108.67279 57.180916 108.67279 52.963257 110.78163 c
48.745575 112.89046 48.745575 116.30955 52.963257 118.41838 c
57.180916 120.52721 64.019089 120.52721 68.236748 118.41838 c
f
0.60000002 i
0 0 0 sc
0.60000002 0 0 -0.60000002 -4.2000003 141.60001 cm
120.72791 38.636047 m
127.75738 42.150761 127.75738 47.849239 120.72791 51.363953 c
113.69848 54.878689 102.30152 54.878689 95.272095 51.363953 c
88.242622 47.849239 88.242622 42.150761 95.272095 38.636047 c
102.30152 35.121311 113.69848 35.121311 120.72791 38.636047 c
S
/Cs2 SC
0 sc
0 i
0.60000002 0 0 -0.60000002 60.600002 114.60001 cm
-2.78 3.8600006 m
(!)s
0.60000002 i
/Cs1 SC
0 0 0 sc
0.60000002 0 0 -0.60000002 -4.2000003 141.60001 cm
331.99994 45 m
297.89999 45 l
S
0 i
CM
169.74001 114.60001 m
174.54001 112.8 l
174.54001 116.4 l
h
169.74001 114.60001 m
f
0 J
0 j
0.60000002 0 0 -0.60000002 -4.2000003 141.60001 cm
289.89999 45 m
297.89999 48 l
297.89999 42 l
h
289.89999 45 m
S
[
4
4
] 0 d
0.60000002 i
414 53.999763 m
420.40817 51.000141 425.8938 45 433.22641 45 c
438.71725 45 445.24622 48.36454 451.64676 51.31424 c
S
0 i
CM
269.54993 109.644 m
265.82953 113.17084 l
266.78665 110.81205 l
266.78665 110.81205 l
264.42789 109.85491 l
h
269.54993 109.644 m
f
[] 0 d
0.60000002 0 0 -0.60000002 -4.2000003 141.60001 cm
456.24988 53.259998 m
450.04919 47.381939 l
451.64441 51.313255 l
451.64441 51.313255 l
447.7131 52.908482 l
h
456.24988 53.259998 m
S
/Cs2 SC
0 sc
0.60000002 0 0 -0.60000002 287.0625 111.9 cm
/F1.1[ 10 0 0 -10 0 0]sf
-18.347168 4 m
(2,7$895)[ 6.669922 5.561523 5.561523 2.778320 5.000000 5.561523 0.000000 ] xS
ep
end
%%Trailer
%%EOF
